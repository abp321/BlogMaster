@using BlogMaster.Shared.Models
<div class="card mt-5">
    <div class="card-header">
        <h4 class="mb-0">Add a Comment</h4>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <label for="authorName" class="form-label">Your Name</label>
            <input
                type="text"
                class="form-control"
                id="authorName"
                @bind="comment.Author"
                placeholder="Enter your name"
                maxlength="30"
                @ref="authorNameInput" />
        </div>

        <div class="mb-3">
            <label for="commentContent" class="form-label">Comment</label>
            <textarea
                class="form-control"
                id="commentContent"
                @bind="comment.Content"
                rows="4"
                placeholder="Write your comment here"
                maxlength="500"
            ></textarea>
        </div>

        <button @onclick="SubmitComment" class="btn btn-primary">
            <i class="bi bi-send-fill me-2"></i>Submit
        </button>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<CommentDto> OnCommentSubmitted { get; set; }

    private CommentDto comment = new();
    private ElementReference authorNameInput;

    async Task SubmitComment()
    {
        if (!string.IsNullOrWhiteSpace(comment.Author) && !string.IsNullOrWhiteSpace(comment.Content))
        {
            await OnCommentSubmitted.InvokeAsync(comment);
            comment = new CommentDto();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await authorNameInput.FocusAsync();
        }
    }
}
